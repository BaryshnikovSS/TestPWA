{"version":3,"sources":["components/title/Title.module.css","components/list-Item/List-Item.jsx","context/context.js","components/navbar/Navbar.module.css","components/App.module.css","components/loader/Loader.jsx","components/title/Title.jsx","components/navbar/Navbar.jsx","components/App.jsx","index.jsx"],"names":["module","exports","withRouter","image","cssItem","cssLink","name","path","handleClick","style","title","onClick","to","toLowerCase","activeClassName","React","createContext","css","backdrop","backgroundColor","position","top","left","width","height","zIndex","content","transform","Spinner","type","color","Title","description","className","container","stls","active","Navbar","navigation","navbar","map","el","idx","key","PrivyPage","lazy","MindPage","BodyPage","BreathPage","MorePage","CategoryPage","App","useState","menuTitle","setMenuTitle","menuDiscription","setMenuDiscription","dataRecorder","data","localStorage","setItem","JSON","stringify","useEffect","a","parse","getItem","fetchData","Provider","value","button","fallback","Loader","exact","component","e","currentTarget","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7b7fae7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Title_container__2INVF\",\"title\":\"Title_title__1G7sz\",\"description\":\"Title_description__3B9SO\"};","import React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\nconst ListItem = ({ image, cssItem, cssLink, name, path, handleClick }) => (\r\n  <li style={cssItem} title={name} onClick={handleClick}>\r\n    {/* {image && <img src={require(`${image}?original`)} alt=\"img\"/>}  */}\r\n    {/* {image && <img src={require(\"../../assets/images/icons/navbar/privy.svg\")} alt=\"img\"  />} */}\r\n    <NavLink style={cssLink} to={`/${path.toLowerCase()}`} activeClassName=\"active\">\r\n      {name}\r\n    </NavLink>\r\n  </li>\r\n);\r\n\r\nexport default withRouter(ListItem);\r\n","import React from 'react';\r\n\r\nexport default React.createContext();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navbar_navigation__2N-ZY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"App_button__2_qU2\"};","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n/**\r\n * styles\r\n */\r\nconst css = {\r\n  backdrop: {\r\n    backgroundColor: \"#1a1a1bc9\",\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    zIndex: \"40\",\r\n  },\r\n  content: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\n/**\r\n *  component\r\n */\r\n\r\nconst Spinner = () => (\r\n  <div style={css.backdrop}>\r\n    <Loader\r\n      type=\"ThreeDots\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n    //   timeout={3000} //3 secs\r\n      style={css.content}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport css from './Title.module.css';\r\n\r\nconst Title = ({ title, description }) => (\r\n  <div className={css.container}>\r\n    <h1 className={css.title}>{title}</h1>\r\n    <p className={css.description}>{description}</p>\r\n  </div>\r\n);\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport List from \"../list-Item/List-Item\";\r\nimport navbar from \"../../db/navbar.json\";\r\nimport css from \"./Navbar.module.css\";\r\n\r\nconst stls = {\r\n  active: {\r\n    backgroundColor: \"#000\",\r\n  },\r\n};\r\n\r\nconst Navbar = ({ title, onClick }) => (\r\n  <nav className={css.navigation}>\r\n    <ul>\r\n      {navbar.map((el, idx) => (\r\n        <List\r\n          key={idx + el.title}\r\n          image={el.image}\r\n          name={el.title}\r\n          path={el.title.toLowerCase()}\r\n          cssItem={title === el.title ? stls.active : {}}\r\n          handleClick={onClick}\r\n        />\r\n      ))}\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navbar;\r\n","import React, { lazy, Suspense, useState, useEffect } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Loader from \"./loader/Loader\";\nimport Title from \"./title/Title\";\nimport Nav from \"./navbar/Navbar\";\nimport Context from \"../context/context\";\nimport navbar from \"../db/navbar.json\";\nimport css from './App.module.css'\n\nconst PrivyPage = lazy(() =>\n  import(\"../pages/homePage/HomePage\" /* webpackChunkName: \"home\" */)\n);\n\nconst MindPage = lazy(() =>\n  import(\"../pages/mindPage/MindPage\" /* webpackChunkName: \"mind\" */)\n);\n\nconst BodyPage = lazy(() =>\n  import(\"../pages/bodyPage/BodyPage\" /* webpackChunkName: \"mind\" */)\n);\n\nconst BreathPage = lazy(() =>\n  import(\"../pages/breathPage/BreathPage\" /* webpackChunkName: \"mind\" */)\n);\n\nconst MorePage = lazy(() =>\n  import(\"../pages/morePage/MorePage\" /* webpackChunkName: \"mind\" */)\n);\n\nconst CategoryPage = lazy(() =>\n  import(\"../pages/categoryPage/CategoryPage\" /* webpackChunkName: \"mind\" */)\n);\n\n/**\n * component\n */\nfunction App() {\n  /**\n   * state\n   */\n  const [menuTitle, setMenuTitle] = useState(\"Privy\");\n  const [menuDiscription, setMenuDiscription] = useState(\n    \"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\"\n  );\n\n  /**\n   * componentDidMount analog\n   */\n  useEffect(() => {\n    async function fetchData() {\n      const title = navbar[0].title;\n      const description = navbar[0].description;\n\n      dataRecorder({ title, description});\n    }\n    \n    const data = JSON.parse(localStorage.getItem(\"mainMenu\"));\n\n    if (data) {\n      dataRecorder(data);\n    }\n\n    if (!data) {\n      fetchData();\n    }\n  }, []);\n\n  /**\n   * recorder \n   */\n  function dataRecorder(data) {\n    const { title, description} = data;\n    setMenuTitle(title);\n    setMenuDiscription(description);\n    localStorage.setItem(\"mainMenu\", JSON.stringify(data));\n  }\n\n  /**\n   * handlers\n   */\n  function handleClick(e) {\n    const title = e.currentTarget.title;\n    const description = navbar.find((el) => el.title === e.currentTarget.title).description;\n\n    dataRecorder({ title, description });\n  }\n\n  /**\n   * render\n   */\n  return (\n    <Context.Provider value={{menuTitle}}>\n\n      <div>\n\n        <button className={css.button}></button>\n\n        <Title title={menuTitle} description={menuDiscription}/>\n\n        <Suspense fallback={<Loader />}>\n          <Switch>\n            <Route exact path=\"/\" component={PrivyPage} />\n            <Route exact path=\"/mind/:category\" component={CategoryPage} />\n            <Route exact path=\"/mind\" component={MindPage} />\n            <Route exact path=\"/body\" component={BodyPage} />\n            <Route exact path=\"/breath\" component={BreathPage} />\n            <Route exact path=\"/more\" component={MorePage} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </Suspense>\n\n        <Nav title={menuTitle} onClick={handleClick} />\n\n      </div>\n\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport App from \"./components/App\";\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Route component={App}/>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}